version: '2'

services:

  proxy:
    image: jwilder/nginx-proxy:alpine
    mem_limit: 1024m
    links:
      - replicate
      - registry
    ports:
      - '80:80'
      - '443:443'
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /etc/nginx/certs
      - ./conf/proxy.conf:/etc/nginx/proxy.conf
    restart: 'always'

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    mem_limit: 1024m
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - proxy

  replicate:
    build:
      context: .
      dockerfile: packages/replication-master/Dockerfile
    restart: 'always'
    env_file: .env
    mem_limit: 4608m
    environment:
      - VIRTUAL_HOST=replication.registry.js.ipfs.io
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=replication.registry.js.ipfs.io
      - LETSENCRYPT_EMAIL=alex.potsides@protocol.ai
      - NODE_ENV=${NODE_ENV}
      - EXTERNAL_PROTOCOL=https
      - EXTERNAL_HOST=registry.js.ipfs.io
      - EXTERNAL_PORT=443
      - EXTERNAL_IP=35.178.192.119
      - IPFS_STORE_TYPE=s3
      - STORE_S3_REGION=${STORE_S3_REGION}
      - STORE_S3_BUCKET=${STORE_S3_BUCKET}
      - STORE_S3_ACCESS_KEY_ID=${STORE_S3_ACCESS_KEY_ID}
      - STORE_S3_SECRET_ACCESS_KEY=${STORE_S3_SECRET_ACCESS_KEY}
      - STORE_S3_PATH=replication-master
      - FOLLOW_SEQ_FILE=seq.txt
      - CLONE_DELAY=30000
      - CLONE_CONCCURRENCY=0
      - FOLLOW_CONCURRENCY=5
      - REQUEST_CONCURRENCY=5
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"

  registry:
    build:
      context: .
      dockerfile: packages/registry-mirror/Dockerfile
    restart: 'always'
    env_file: .env
    mem_limit: 2048m
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - VIRTUAL_HOST=registry.js.ipfs.io
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=registry.js.ipfs.io
      - LETSENCRYPT_EMAIL=alex.potsides@protocol.ai
      - NODE_ENV=${NODE_ENV}
      - EXTERNAL_PROTOCOL=https
      - EXTERNAL_HOST=registry.js.ipfs.io
      - EXTERNAL_PORT=443
      - EXTERNAL_IP=35.178.192.119
      - IPFS_STORE_TYPE=s3
      - STORE_S3_REGION=${STORE_S3_REGION}
      - STORE_S3_BUCKET=${STORE_S3_BUCKET}
      - STORE_S3_ACCESS_KEY_ID=${STORE_S3_ACCESS_KEY_ID}
      - STORE_S3_SECRET_ACCESS_KEY=${STORE_S3_SECRET_ACCESS_KEY}
      - STORE_S3_PATH=worker
      - PUBSUB_MASTER=http://replicate:8080
      - REQUEST_MAX_SOCKETS=20
    links:
      - replicate
    ports:
      - 10000-10009:10000
      - 10010-10019:10001
      - 10020-10029:10002
      - 10030-10039:10003
      - 10040-10049:10004
      - 10050-10059:10005
      - 10060-10069:10006
      - 10070-10079:10007
      - 10080-10089:10008
      - 10090-10099:10009
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"

  spiped:
    restart: always
    env_file: .env
    build:
      context: .
      dockerfile: monitoring/spiped
      args:
        SPIPED_KEY: ${SPIPED_KEY}
        NETDATA_EIP: ${NETDATA_EIP}
    mem_limit: 1024m

  netdata:
    restart: always
    mem_limit: 1024m
    hostname: registry.js.ipfs.io
    env_file: .env
    build:
      context: .
      dockerfile: monitoring/netdata
      args:
        NETDATA_API_KEY: ${NETDATA_API_KEY}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      # https://docs.netdata.cloud/packaging/docker/#docker-container-names-resolution
      - PGID=115
    links:
      - spiped
    depends_on:
      - spiped
      - replicate
      - registry
